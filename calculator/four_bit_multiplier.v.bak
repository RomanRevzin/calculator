module four_bit_multiplier(
	factor1,
	factor2,
	out,
);

	input [3:0] factor1;
	input [3:0] factor2;
	input sign;
	
	output [7:0] out;
	
		
	full_adder fa1(.b1(addend1[0]), .b2(add2[0]), .c_in(sign),   .sum(sum1), .c_out(c_out1));
	full_adder fa2(.b1(addend1[1]), .b2(add2[1]), .c_in(c_out1), .sum(sum2), .c_out(c_out2));
	full_adder fa3(.b1(addend1[2]), .b2(add2[2]), .c_in(c_out2), .sum(sum3), .c_out(c_out3));
	full_adder fa4(.b1(addend1[3]), .b2(add2[3]), .c_in(c_out3), .sum(sum4), .c_out(carry_out_wire));
	
	assign out 	 = {sum4, sum3, sum2, sum1};
	
	assign carry_out = carry_out_wire;
	
endmodule 